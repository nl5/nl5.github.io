WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.820
欢迎回来 现在你要开始

00:00:04.820 --> 00:00:09.140
将数据生成批次了

00:00:09.140 --> 00:00:12.964
你将生成若干批次并将其传递给网络

00:00:12.964 --> 00:00:15.720
记住 用 skip-gram 结构的时候

00:00:15.720 --> 00:00:19.620
我们要取一个单词

00:00:19.620 --> 00:00:23.504
并以该词所处文本周围的单词作为目标

00:00:23.504 --> 00:00:28.410
也就是说无论输入单词是什么 我们都会以获取该词的上下文作为目标

00:00:28.410 --> 00:00:30.120
所以在处理各单词时

00:00:30.120 --> 00:00:33.435
我们要抓取一个由输入词周围单词组成的窗口

00:00:33.435 --> 00:00:37.295
这个窗口的大小为 C

00:00:37.295 --> 00:00:45.390
Mikalov 做的其实就是在窗口里随机选择一个范围

00:00:45.390 --> 00:00:47.789
这么做是因为远些的单词

00:00:47.789 --> 00:00:52.429
往往与输入单词关系较浅

00:00:52.429 --> 00:00:54.618
而近些的单词则较深

00:00:54.618 --> 00:00:57.769
所以你要弱化相对较远的单词

00:00:57.770 --> 00:01:01.609
这个远是相对于那些离输入单词较近的词来说的

00:01:01.609 --> 00:01:05.254
假设你的窗口大小为 C 假设 C 等于 5

00:01:05.254 --> 00:01:07.879
你得在

00:01:07.879 --> 00:01:12.739
1 到 C 之间选一个随机数 R

00:01:12.739 --> 00:01:16.280
这么做相当于你随机在大窗口里

00:01:16.280 --> 00:01:21.269
选了一个由 R 定义的小窗口

00:01:21.269 --> 00:01:26.189
在小窗口里 你要以在输入单词前和后的 R 个单词

00:01:26.188 --> 00:01:29.298
作为正确的标签

00:01:29.299 --> 00:01:32.329
这样一来

00:01:32.328 --> 00:01:35.750
你就总能得到现有单词旁边的单词

00:01:35.750 --> 00:01:39.584
至于那些离现有单词较远的词 则获取的概率会比较小

00:01:39.584 --> 00:01:42.305
所以你会更频繁地训练

00:01:42.305 --> 00:01:46.420
那些离现有单词较近的词

00:01:46.420 --> 00:01:51.295
你要在这里实现这些操作

00:01:51.295 --> 00:01:53.674
也即获取目标单词

00:01:53.674 --> 00:01:56.469
所以你要输入一串单词

00:01:56.468 --> 00:02:00.009
和一个索引 也就是现有单词 然后在索引周围抓取一个窗口

00:02:00.010 --> 00:02:06.965
并返回窗口里的所有目标单词

00:02:06.965 --> 00:02:10.375
但你还要用

00:02:10.375 --> 00:02:13.810
你还要找出这个随机范围 R

00:02:13.810 --> 00:02:20.870
然后只返回出小窗口 R 里的单词 等你写好了实现代码

00:02:20.870 --> 00:02:23.574
这就是你要用的批次返回函数了

00:02:23.574 --> 00:02:28.430
也就是我们要传递给网络的数据

00:02:28.430 --> 00:02:33.375
这个函数会从长长的文本列表 也就是整数列表里

00:02:33.375 --> 00:02:36.145
抓取一些单词

00:02:36.145 --> 00:02:40.370
然后获取每个单词的目标 也就是应用函数 get_targets

00:02:40.370 --> 00:02:44.615
换句话说 用你在这上面实现的函数来获取出现在窗口里的目标单词

00:02:44.615 --> 00:02:47.750
我还没找到什么好办法

00:02:47.750 --> 00:02:52.848
把目标单词的这个随机获取范围和 TensorFlow 图结合起来

00:02:52.848 --> 00:02:56.943
所以这里我就只是

00:02:56.943 --> 00:03:02.089
在批次里设置一行一个输入目标对

00:03:02.090 --> 00:03:06.093
比如说 一个现有单词

00:03:06.093 --> 00:03:11.159
对应四个目标单词 那我就在批次里将其做成四行

00:03:11.159 --> 00:03:12.878
因为有四个输入目标对

00:03:12.878 --> 00:03:17.473
好了 动手吧 试着实现这个函数 get_target

00:03:17.473 --> 00:03:24.000
和之前一样 你可以到 notebook 或视频里查看我的解决方案 加油

