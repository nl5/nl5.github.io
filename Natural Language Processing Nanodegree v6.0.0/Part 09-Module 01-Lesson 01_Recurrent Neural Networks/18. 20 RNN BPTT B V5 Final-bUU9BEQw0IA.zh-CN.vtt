WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.615
我们来基于时间展开模型

00:00:03.615 --> 00:00:06.630
清洁一下概略图

00:00:06.629 --> 00:00:09.629
重点关注第三个时间步长

00:00:09.630 --> 00:00:14.550
在这个模型中 我们有三个想要修正的权重矩阵

00:00:14.550 --> 00:00:20.789
权重矩阵 Wx 连接网络的输入和状态或隐藏层

00:00:20.789 --> 00:00:25.679
权重矩阵 Ws 连接一个状态和下一个状态

00:00:25.679 --> 00:00:31.024
权重矩阵 Wy 连接这个状态和输出

00:00:31.024 --> 00:00:34.049
我们首先调整 Wy

00:00:34.049 --> 00:00:37.125
这是最容易得到的

00:00:37.125 --> 00:00:39.539
现在时间 t+3

00:00:39.539 --> 00:00:42.420
对于 Wy 平方差的偏导数

00:00:42.420 --> 00:00:46.859
可以通过一步链式法则得到结果

00:00:46.859 --> 00:00:51.975
等于输出平方差的偏导数

00:00:51.975 --> 00:00:57.814
乘以权重矩阵 Wy 输出的导数

00:00:57.814 --> 00:01:00.329
与之前一样 根据权重矩阵的每个要素

00:01:00.329 --> 00:01:04.670
计算得到这些导数

00:01:04.670 --> 00:01:07.989
为了调整其他两个矩阵

00:01:07.989 --> 00:01:11.034
我们需要使用基于时间的反向传播算法

00:01:11.034 --> 00:01:14.989
我们选择首先调整哪个 并不会产生影响

00:01:14.989 --> 00:01:19.574
我们来重点关注权重矩阵 Ws

00:01:19.575 --> 00:01:22.995
这个权重矩阵连接一个状态和下一个状态

00:01:22.995 --> 00:01:26.359
并且删除概略图中我们不需要的内容

00:01:26.359 --> 00:01:32.715
乍一看 这像是找到 Ws 导数时

00:01:32.715 --> 00:01:36.210
我们只需要考虑状态 S3

00:01:36.209 --> 00:01:39.869
这样 t 等于 3 时间步长的导数

00:01:39.870 --> 00:01:44.925
等于输出平方差的偏导数

00:01:44.924 --> 00:01:49.825
乘以 S3 输出的导数

00:01:49.825 --> 00:01:56.234
乘以权重矩阵 Ws S3 的导数

00:01:56.234 --> 00:02:04.155
不过 S3 取决于之前的状态 S1 和 S2

00:02:04.155 --> 00:02:06.573
实际上我们不能到此为止

00:02:06.573 --> 00:02:08.609
我们也需要考虑

00:02:08.610 --> 00:02:10.635
之前发生的事情

00:02:10.634 --> 00:02:15.569
把这个贡献添加到我们计算中

00:02:15.569 --> 00:02:18.609
所以我们会继续计算梯度

00:02:18.610 --> 00:02:22.845
认识到我们需要累加

00:02:22.844 --> 00:02:26.479
之前每个状态的贡献

00:02:26.479 --> 00:02:28.780
我们考虑 S2 时

00:02:28.780 --> 00:02:34.365
以下路径会贡献反向传播算法

00:02:34.365 --> 00:02:39.235
显然我们发现 S3 依赖 S2

00:02:39.235 --> 00:02:43.570
使用链式法则计算导数

00:02:43.569 --> 00:02:50.215
追溯到权重矩阵 Ws S2 的导数

00:02:50.215 --> 00:02:51.950
不过我们并没结束

00:02:51.949 --> 00:02:57.039
我们需要再回到第一个状态 S1

00:02:57.039 --> 00:03:00.984
再次使用链式法则计算导数

00:03:00.985 --> 00:03:08.045
追溯到权重矩阵 Ws S1 的导数

00:03:08.044 --> 00:03:10.864
通过使用基于时间的反向传播算法

00:03:10.865 --> 00:03:16.215
我们再次观察得到的累积梯度

00:03:16.215 --> 00:03:21.180
即我们要考虑所有的状态向量

00:03:21.180 --> 00:03:24.810
状态向量 S3 状态向量 S2

00:03:24.810 --> 00:03:27.075
和状态向量 S1

00:03:27.075 --> 00:03:32.879
一般说来 我们追溯多个时间步长

00:03:32.879 --> 00:03:37.259
需要一个通用框架定义基于时间的反向传播算法

00:03:37.259 --> 00:03:41.165
来改变 Ws

00:03:41.165 --> 00:03:43.555
那么接下来是什么呢？

00:03:43.555 --> 00:03:49.000
在接下来的视频中 我们会重点关注调整权重矩阵 Wx

