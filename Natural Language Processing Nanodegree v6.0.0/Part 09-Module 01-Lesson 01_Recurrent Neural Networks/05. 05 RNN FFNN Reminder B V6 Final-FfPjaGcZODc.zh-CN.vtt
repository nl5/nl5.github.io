WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.290
我们来看一个人工智能网络的基本模型

00:00:04.290 --> 00:00:06.720
其中只包括一个单独的隐藏层

00:00:06.719 --> 00:00:09.570
每个输入都连接到隐藏层的神经元

00:00:09.570 --> 00:00:12.960
隐藏层的神经元都连接到

00:00:12.960 --> 00:00:15.885
输出层的神经元

00:00:15.884 --> 00:00:19.562
每个神经元表示一个单独的输出

00:00:19.562 --> 00:00:23.777
我们可以把它看作数学函数的集合

00:00:23.777 --> 00:00:27.089
从数学意义上来说 每个输入通过我们需要调整的一系列权重

00:00:27.089 --> 00:00:30.734
连接到包括神经元的隐藏层

00:00:30.734 --> 00:00:37.314
每个隐藏层的神经元也通过类似的方式连接到输出层

00:00:37.314 --> 00:00:39.979
输入数量

00:00:39.979 --> 00:00:42.214
隐藏神经元数量

00:00:42.215 --> 00:00:44.000
和输出数量没有限制

00:00:44.000 --> 00:00:47.539
这些数字之间也没有联系

00:00:47.539 --> 00:00:50.327
所以我们有 n 个输入

00:00:50.328 --> 00:00:54.495
m 个隐藏神经元和 k 个输出

00:00:54.494 --> 00:00:57.439
如果更加细致地观察

00:00:57.439 --> 00:01:01.579
我们会发现每个输入乘以对应的权重

00:01:01.579 --> 00:01:06.319
然后在下一层的神经元增加偏差

00:01:06.319 --> 00:01:09.469
偏差是神经元的一个外部参数

00:01:09.469 --> 00:01:13.510
可以通过增加外部固定值输入进行建模

00:01:13.510 --> 00:01:15.800
总和一般是通过激活函数

00:01:15.799 --> 00:01:20.307
进入下一层或作为输出

00:01:20.308 --> 00:01:22.467
不过我们的目标是什么呢？

00:01:22.466 --> 00:01:28.295
我们把系统看作黑盒子 其中包括 n 个输入 k 个输出

00:01:28.295 --> 00:01:32.200
我们的目标是通过这种方式设计系统

00:01:32.200 --> 00:01:36.635
这样系统可以针对特定的输入 x 提供正确的输出 y

00:01:36.635 --> 00:01:41.260
我们的任务是决定黑盒子中的内容

00:01:41.260 --> 00:01:45.640
我们知道可以使用人工神经网络 需要训练这个网络

00:01:45.640 --> 00:01:51.292
最终得到的系统可以根据特定的输入 产生正确的输出

00:01:51.292 --> 00:01:54.075
大多数情况下这是正确的

00:01:54.075 --> 00:01:57.689
从本质上讲 我们实际上想要

00:01:57.689 --> 00:02:02.534
找到最理想的一系列权重 把输入和隐藏层连接起来

00:02:02.534 --> 00:02:07.137
然后找到最理想的一系列权重 把隐藏层和输出连接起来

00:02:07.137 --> 00:02:09.629
我们永远不会得到一个完美的估值

00:02:09.629 --> 00:02:12.794
但可以无限靠近完美的估值

00:02:12.794 --> 00:02:17.024
为了做到这一点 我们需要从你已经熟悉的过程开始

00:02:17.025 --> 00:02:19.814
即训练阶段

00:02:19.814 --> 00:02:21.840
那么我们来看训练阶段

00:02:21.840 --> 00:02:25.860
会发现最适合系统的一系列权重

00:02:25.860 --> 00:02:31.800
这个阶段包括两个步骤 前馈和反向传播

00:02:31.800 --> 00:02:35.550
我们会根据需要重复多次

00:02:35.550 --> 00:02:39.905
直到确定我们的系统达到最佳效果

00:02:39.905 --> 00:02:42.147
在前馈部分

00:02:42.147 --> 00:02:45.234
我们会计算系统的输出

00:02:45.235 --> 00:02:52.545
对比输出和正确的输出 可以向我们提供一个误差

00:02:52.544 --> 00:02:55.564
确定误差的方法有好几种

00:02:55.564 --> 00:02:58.405
我们会从数学角度进行观察

00:02:58.405 --> 00:03:00.564
在反向传播部分

00:03:00.564 --> 00:03:04.870
我们会改变权重 最小化误差

00:03:04.870 --> 00:03:09.375
然后不断重复前馈过程

00:03:09.375 --> 00:03:11.879
在接下来几个视频中

00:03:11.879 --> 00:03:13.530
我们将细致观察

00:03:13.530 --> 00:03:18.435
前馈和反向传播步骤中的数学运算

00:03:18.435 --> 00:03:20.920
我们会浏览你已经了解的内容

00:03:20.919 --> 00:03:24.000
不过希望也能加深你的理解

