WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:03.100
Agora vamos criar os dados
de entrada e de saída.

00:00:03.133 --> 00:00:06.100
Na entrada, vamos contar
as palavras da resenha

00:00:06.133 --> 00:00:08.534
e colocar em um vetor
de tamanho fixo,

00:00:08.567 --> 00:00:12.234
onde cada posição do vetor
é uma palavra do vocabulário.

00:00:12.267 --> 00:00:14.300
Primeiro contamos
o vocabulário.

00:00:14.334 --> 00:00:17.734
Parece que temos
umas 74 mil palavras.

00:00:17.767 --> 00:00:19.868
Vamos criar um vetor vazio.

00:00:19.901 --> 00:00:24.367
É uma boa prática alocar
este vetor como vazio

00:00:24.400 --> 00:00:26.033
e editar no caminho.

00:00:26.067 --> 00:00:29.100
Uma das coisas mais caras
que você pode fazer

00:00:29.133 --> 00:00:30.701
é alocar mais memória.

00:00:30.734 --> 00:00:33.934
Não queremos criá-lo de novo
toda vez que usamos.

00:00:33.968 --> 00:00:37.901
Vamos criar um vazio
e uma função que o modifica

00:00:37.934 --> 00:00:39.701
com as contagens certas.

00:00:39.734 --> 00:00:44.133
A primeira coisa é decidir
qual posição é cada palavra

00:00:44.167 --> 00:00:47.000
e criar uma variável
que permite buscar isso.

00:00:47.033 --> 00:00:49.567
Não importa
em qual posição colocamos.

00:00:49.601 --> 00:00:51.734
"Horrível"
pode estar aqui, ali...

00:00:51.767 --> 00:00:55.701
Mas o que escolhermos,
temos que manter.

00:00:55.734 --> 00:01:00.400
Quero criar um dicionário que
permite procurar as palavras

00:01:00.434 --> 00:01:03.067
de acordo com sua posição
no vocabulário.

00:01:03.100 --> 00:01:06.634
Depois vamos criar a função.
Camada zero é uma variável,

00:01:06.667 --> 00:01:08.167
tirar as antigas,

00:01:08.200 --> 00:01:12.467
passar por todas as palavras
da resenha,

00:01:12.501 --> 00:01:17.200
alocar uma posição
naquele vetor,

00:01:17.234 --> 00:01:20.467
e incrementar, para ter
uma posição para cada uma.

00:01:20.501 --> 00:01:24.334
Vamos testar na primeira resenha.
Esta é a primeira.

00:01:24.367 --> 00:01:28.567
Parece que funcionou.
Uma das palavras...

00:01:28.601 --> 00:01:32.601
Deve ser a vazia...
Apareceu 18 vezes. Que tal?

00:01:32.634 --> 00:01:34.634
Agora o rótulo desejado.

00:01:34.667 --> 00:01:37.133
Funcionou.
O primeiro rótulo...

00:01:39.334 --> 00:01:40.701
é positivo.

00:01:40.734 --> 00:01:43.167
O segundo eu acho
que é negativo.

00:01:43.200 --> 00:01:45.234
Isso. Está funcionando.

00:01:45.267 --> 00:01:46.567
Isso vai funcionar.

00:01:46.601 --> 00:01:48.334
Essa é a entrada dos dados.

00:01:48.367 --> 00:01:51.934
Espero que vocês tenham criado
variáveis como estas.

00:01:51.968 --> 00:01:54.100
A coisa legal
que estamos fazendo,

00:01:54.133 --> 00:01:55.868
o que devemos aprender,

00:01:55.901 --> 00:01:58.901
é sobre a eficiência.
Quando criar os vetores,

00:01:58.934 --> 00:02:01.901
tente não alocar vetores novos
para os dados.

00:02:01.934 --> 00:02:06.734
A outra coisa que não fizemos
é gerar todo o conjunto de dados.

00:02:06.767 --> 00:02:13.767
Seria uma matriz de 74 mil
pelo número de resenhas, 25 mil.

00:02:13.801 --> 00:02:17.801
74 mil do vocabulário,

00:02:17.834 --> 00:02:20.334
vezes 25 mil...

00:02:20.367 --> 00:02:22.334
Seria... Caramba!

00:02:23.167 --> 00:02:25.334
2 bilhões de números.

00:02:25.367 --> 00:02:26.968
Isso é...

00:02:27.000 --> 00:02:28.834
É muita coisa pra guardar.

00:02:28.868 --> 00:02:32.334
Podemos povoar isso facilmente
começando com zeros,

00:02:32.367 --> 00:02:36.701
é uma coisa rápida,
e uma boa prática para os dados,

00:02:36.734 --> 00:02:39.133
para não acabar
com a sua memória.

00:02:39.167 --> 00:02:43.100
Essas foram a entrada e saída.
As coisas para prestar atenção.

00:02:43.133 --> 00:02:46.801
Não alocar memória demais
ou criar variáveis toda hora.

00:02:46.834 --> 00:02:49.934
Esses são os dados que vamos
usar na rede neural.

00:02:49.968 --> 00:02:53.534
Na próxima seção vamos ver
como colocar isso nela.

