WEBVTT
Kind: captions
Language: en

00:00:01.200 --> 00:00:05.440
Now that we have validated that
our theory, that individual words

00:00:05.440 --> 00:00:08.660
instead of review are predictive of that
review's positive or negative label.

00:00:08.660 --> 00:00:12.267
Now it's time to transform our
datasets into numbers in a way that

00:00:12.267 --> 00:00:14.563
respects this theory and this belief, so

00:00:14.563 --> 00:00:18.773
that our neural network can search for
correlation in this particular way.

00:00:18.773 --> 00:00:23.121
So what we want to be able to do is we
want to present the words as input into

00:00:23.121 --> 00:00:27.251
the neural network in such a way
that it can look for correlation and

00:00:27.251 --> 00:00:31.339
make the correct positive or
negative prediction of the output.

00:00:31.339 --> 00:00:34.619
So the most natural way to start
here is simply count each word and

00:00:34.619 --> 00:00:38.100
input those counts as inputs
to the neural network.

00:00:38.100 --> 00:00:39.350
Pretty simple, well defined and

00:00:39.350 --> 00:00:43.160
I think that should have correlation
with what you want to predict.

00:00:43.160 --> 00:00:45.699
Now as far as predicting and
positive and negative,

00:00:45.699 --> 00:00:49.010
obviously neural nets can't
predict the word positive.

00:00:49.010 --> 00:00:52.969
Well, some more advanced ones can but
that's not what we're trying to do here.

00:00:52.969 --> 00:00:56.482
Instead, we're going to
represent positiveness and

00:00:56.482 --> 00:01:01.608
negativeness as a number where positive
is the number 1 and negative is the 0.

00:01:01.608 --> 00:01:04.533
Now the reason that we're
doing this in one neuron and

00:01:04.533 --> 00:01:08.498
kind of giving it two sides that the
network has to decide between is that we

00:01:08.498 --> 00:01:11.910
know that positive and
negative are mutually exclusive.

00:01:11.910 --> 00:01:14.910
But we're not going to train our
network to ever say that a review is

00:01:14.910 --> 00:01:16.640
both positive and negative.

00:01:16.640 --> 00:01:17.580
And by modeling it this way,

00:01:17.580 --> 00:01:20.490
we can make these two different
labels mutually exclusive.

00:01:20.490 --> 00:01:23.730
This reduces the number of ways that
a neural network can make a mistake.

00:01:23.730 --> 00:01:26.560
Which reduces the amount
it has to learn and

00:01:26.560 --> 00:01:29.947
actually helps it learn
this particular pattern.

00:01:29.947 --> 00:01:32.450
In some ways some other [INAUDIBLE] for
example,

00:01:32.450 --> 00:01:35.963
have five different output labels for
different granularities.

00:01:35.963 --> 00:01:38.408
So for example, can have five stars,

00:01:38.408 --> 00:01:41.700
you can pick one star to
three stars to five stars.

00:01:41.700 --> 00:01:45.010
And it turns out that sometimes it
can actually hurt the neural net and

00:01:45.010 --> 00:01:48.663
make it more difficult to predict if it
actually has to predict which star was

00:01:48.663 --> 00:01:49.365
most likely.

00:01:49.365 --> 00:01:53.851
Because it allows it to sort of
make double positive predictions,

00:01:53.851 --> 00:01:59.180
a three and a four where the four is
incorrect and the three is correct.

00:01:59.180 --> 00:02:01.830
But they share a lot of signals,
it creates ambiguity in the network.

00:02:01.830 --> 00:02:04.440
But in this case,
because you only have two labels,

00:02:04.440 --> 00:02:08.070
we can force the network to have to
choose between the two of them thus

00:02:08.070 --> 00:02:10.600
reducing the number of ways
that it can make an escape.

00:02:10.600 --> 00:02:13.920
One of the themes throughout
this computorial is going to be

00:02:13.920 --> 00:02:16.330
making the prediction
as easy as possible.

00:02:16.330 --> 00:02:19.180
And framing the problem in such a way
where it's as easy as possible for

00:02:19.180 --> 00:02:21.380
the neural net to make this prediction.

00:02:21.380 --> 00:02:23.606
What do we need and
what was Project 2 going to be about?

00:02:23.606 --> 00:02:27.414
Project 2 is about setting up two
functions that take our input and

00:02:27.414 --> 00:02:32.176
output data and transform them into the
appropriate 1 0 binary representation or

00:02:32.176 --> 00:02:35.387
I guess on the output and
then the count's on the input.

00:02:35.387 --> 00:02:39.720
So in this case, the first function
I want you to build takes a review,

00:02:39.720 --> 00:02:42.015
extracts the words from the review.

00:02:42.015 --> 00:02:45.120
And then counts them and
it puts those counts into a vector.

00:02:45.120 --> 00:02:47.170
Now that vector has to
be constant length,

00:02:47.170 --> 00:02:49.760
it needs to be the length
of the vocabulary.

00:02:49.760 --> 00:02:53.900
And then I want you to create another
function that just maps positive,

00:02:53.900 --> 00:02:55.216
negative to a 1 or 0.

00:02:55.216 --> 00:02:57.027
So go ahead and
create those functions and

00:02:57.027 --> 00:02:59.728
then I'll show you how I create them and
we can compare notes.

00:02:59.728 --> 00:03:00.240
See you then.

