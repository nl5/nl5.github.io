{
  "id": 1429,
  "project_id": 418,
  "upload_types": [
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "Students may run their taggers on more complex datasets (for example, the `nltk.corpus.brown` or `nltk.corpus.treebank` datasets).\n\nStudents may also try more advanced HMMs:\n- Using pseudocounts or interpolated smoothing to handle missing data\n- Retrain the hidden markov model using Baum-Welch re-estimation (available via the `.fit()` method in Pomegranate)",
  "hide_criteria": false,
  "created_at": "2018-01-11T13:28:43.970Z",
  "updated_at": "2020-03-10T16:18:41.633Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 502153,
  "classroom_project_key": "347cbaa1-9ec7-40fa-a6ed-a93f92657e00",
  "language": "en-us",
  "ndkeys": [
    "nd892",
    "nd898-ent",
    "nd892-ent",
    "nd892-cn",
    "nd009-cn-svip",
    "nd009t-cn-svip",
    "nd898",
    "nd898-ent-airbus",
    "nd892-beta",
    "nd898-beta",
    "nd892-cn-ent"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 3582,
      "name": "General Requirements",
      "created_at": "2018-03-27T00:00:10.897Z",
      "updated_at": "2018-03-30T00:30:00.121Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 1429,
      "rubric_items": [
        {
          "id": 10547,
          "section_id": 3582,
          "passed_description": "- Includes `HMM Tagger.ipynb` displaying output for all executed cells\n- Includes `HMM Tagger.html`, which is an HTML copy of the notebook showing the output from executing all cells",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:11:47.928Z",
          "updated_at": "2018-03-30T00:10:25.482Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Submission includes all files required for grading",
          "exceedable": false
        },
        {
          "id": 10626,
          "section_id": 3582,
          "passed_description": "Submitted notebook has made no changes to test case assertions",
          "exceeded_description": null,
          "created_at": "2018-03-30T00:10:25.699Z",
          "updated_at": "2018-03-30T00:13:50.125Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Submitted files are complete and do not include any disallowed changes",
          "exceedable": false
        }
      ]
    },
    {
      "id": 3583,
      "name": "Baseline Tagger Implementation",
      "created_at": "2018-03-27T00:00:23.779Z",
      "updated_at": "2018-03-30T00:30:00.131Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 1429,
      "rubric_items": [
        {
          "id": 10548,
          "section_id": 3583,
          "passed_description": "Emission count test case assertions all pass.\n- The emission counts dictionary has 12 keys, one for each of the tags in the universal tagset\n- \"time\" is the most common word tagged as a NOUN",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:13:13.280Z",
          "updated_at": "2018-03-30T00:10:25.495Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Student correctly implements the `pair_counts()` function",
          "exceedable": false
        },
        {
          "id": 10542,
          "section_id": 3583,
          "passed_description": "Baseline MFC tagger passes all test case assertions and produces the expected accuracy using the universal tagset.\n- &gt;95.5% accuracy on the training sentences\n- 93% accuracy the test sentences",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:00:44.908Z",
          "updated_at": "2018-04-09T19:51:16.140Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Correct baseline MFC tagger implementation",
          "exceedable": false
        }
      ]
    },
    {
      "id": 3585,
      "name": "Calculating Tag Counts",
      "created_at": "2018-03-27T00:04:04.582Z",
      "updated_at": "2018-03-27T00:04:53.528Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 1429,
      "rubric_items": [
        {
          "id": 10544,
          "section_id": 3585,
          "passed_description": "All unigram test case assertions pass",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:04:53.678Z",
          "updated_at": "2018-03-30T00:21:09.719Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Correct `unigram_counts()` implementation",
          "exceedable": false
        },
        {
          "id": 10545,
          "section_id": 3585,
          "passed_description": "All bigram test case assertions pass",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:05:00.395Z",
          "updated_at": "2018-03-30T00:21:09.732Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Correct `bigram_counts()` implementation",
          "exceedable": false
        },
        {
          "id": 10546,
          "section_id": 3585,
          "passed_description": "All start and end count test case assertions pass",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:05:06.326Z",
          "updated_at": "2018-03-30T00:21:09.740Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Correct `start_counts()` and `end_counts()` implementation",
          "exceedable": false
        }
      ]
    },
    {
      "id": 3584,
      "name": "Basic HMM Tagger Implementation",
      "created_at": "2018-03-27T00:01:37.996Z",
      "updated_at": "2018-03-30T00:30:00.140Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 1429,
      "rubric_items": [
        {
          "id": 10627,
          "section_id": 3584,
          "passed_description": "All model topology test case assertions pass",
          "exceeded_description": null,
          "created_at": "2018-03-30T00:13:50.494Z",
          "updated_at": "2018-03-30T00:21:09.751Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Correct HMM network construction",
          "exceedable": false
        },
        {
          "id": 10543,
          "section_id": 3584,
          "passed_description": "Basic HMM tagger passes all assertion test cases and produces the expected accuracy using the universal tagset.\n- &gt;97% accuracy on the training sentences\n- &gt;95.5% accuracy the test sentences",
          "exceeded_description": null,
          "created_at": "2018-03-27T00:02:27.807Z",
          "updated_at": "2018-04-09T19:51:39.437Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Correct basic HMM tagger implementation",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 418,
    "name": "Part of Speech Tagging",
    "nanodegree_key": "nd892",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 1144,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 1,
    "created_at": "2018-03-13T19:56:10.399Z",
    "updated_at": "2020-05-31T06:46:13.984Z",
    "price": "6.5",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}