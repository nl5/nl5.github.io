WEBVTT
Kind: captions
Language: pt-BR

00:00:00.833 --> 00:00:02.400
Bem-vindos de volta,
pessoal!

00:00:02.433 --> 00:00:07.067
Agora você vai começar
a transformar

00:00:07.100 --> 00:00:09.067
os dados em lotes.

00:00:09.100 --> 00:00:12.667
Você vai criar lotes
para passá-los para a sua rede.

00:00:13.200 --> 00:00:15.733
Lembre-se que,
na arquitetura skip-gram,

00:00:15.767 --> 00:00:17.267
nós vamos pegar uma palavra

00:00:17.300 --> 00:00:21.333
e usar as palavras
que estão ao redor dela no texto

00:00:21.367 --> 00:00:23.433
como alvos,

00:00:23.467 --> 00:00:27.467
ou seja, como o contexto
das nossas palavras de input.

00:00:28.533 --> 00:00:30.033
Então, para cada palavra,

00:00:30.067 --> 00:00:32.767
formaremos uma "janela"
com as palavras ao redor dela,

00:00:32.800 --> 00:00:35.667
e o tamanho dessa janela
será C.

00:00:36.200 --> 00:00:41.733
Em seguida,
o que Mikolov fez foi pegar...

00:00:42.500 --> 00:00:45.267
um recorte aleatório
dentro dessa janela.

00:00:45.300 --> 00:00:48.333
Eles fizeram isso porque
as palavras mais afastadas

00:00:48.367 --> 00:00:52.267
costumam estar menos relacionadas
com a palavra de input

00:00:52.300 --> 00:00:54.500
do que as palavras
que estão perto dela.

00:00:54.533 --> 00:00:58.733
Então é melhor dar menos ênfase
às palavras mais afastadas

00:00:58.767 --> 00:01:01.500
do que às palavras
mais próximas.

00:01:01.533 --> 00:01:05.367
Se a sua janela C
for igual a 5,

00:01:05.400 --> 00:01:09.800
você vai selecionar
um número aleatório R

00:01:09.833 --> 00:01:12.433
que seja entre 1 e C.

00:01:12.467 --> 00:01:15.033
É como se você escolhesse
aleatoriamente

00:01:15.067 --> 00:01:17.767
uma janela menor
dentro da sua janela.

00:01:17.800 --> 00:01:21.300
Em seguida, com a sua janela menor
definida por R,

00:01:21.333 --> 00:01:26.233
você pegará R palavras do passado
e R palavras do futuro

00:01:26.267 --> 00:01:29.233
e vai usá-las
como os rótulos corretos.

00:01:29.267 --> 00:01:30.567
Deste modo,

00:01:30.600 --> 00:01:35.900
há mais chances de pegar as palavras
mais próximas da sua palavra atual

00:01:35.933 --> 00:01:39.567
e menos chances de pegar as palavras
mais afastadas da sua palavra atual.

00:01:39.600 --> 00:01:43.567
Então você vai treinar
com as palavras que estão mais perto

00:01:43.600 --> 00:01:45.767
da sua palavra atual
com mais frequência.

00:01:47.100 --> 00:01:51.200
Aqui é onde você
vai implementar tudo isso.

00:01:51.233 --> 00:01:53.700
Você vai pegar
as palavras-alvo.

00:01:53.733 --> 00:01:55.767
Você passará
uma string de palavras

00:01:55.800 --> 00:01:58.633
e, em seguida, um índex,
que é a sua palavra atual.

00:01:58.667 --> 00:02:02.133
Depois você vai pegar uma janela
ao redor do índex

00:02:02.167 --> 00:02:07.067
e devolver todas as palavras-alvo
dessa janela.

00:02:07.100 --> 00:02:10.000
Porém,
você também vai usar...

00:02:10.033 --> 00:02:13.000
Você vai encontrar
um intervalo aleatório R

00:02:13.033 --> 00:02:17.233
e vai devolver apenas as palavras
que estão na janela menor R.

00:02:18.400 --> 00:02:20.867
Depois que você escrever
estes códigos,

00:02:20.900 --> 00:02:24.733
esta função vai devolver
os nossos lotes,

00:02:24.767 --> 00:02:28.000
que são os dados que vamos passar
para a nossa rede.

00:02:28.367 --> 00:02:31.233
A função vai pegar
algumas palavras

00:02:31.267 --> 00:02:36.267
da nossa grande lista de texto,
que são números inteiros,

00:02:36.300 --> 00:02:40.300
e, para cada palavra,
ela vai pegar os alvos,

00:02:40.333 --> 00:02:44.367
ou seja, as palavras-alvo da janela
que você vai implementar aqui.

00:02:44.667 --> 00:02:47.200
Eu ainda não encontrei
uma maneira boa

00:02:47.233 --> 00:02:50.133
de fazer esse número aleatório
de palavras-alvo

00:02:50.167 --> 00:02:52.800
funcionar
no gráfico do TensorFlow.

00:02:52.833 --> 00:02:55.533
Então o que eu fiz aqui

00:02:55.567 --> 00:03:01.533
foi criar uma linha no lote
para cada par de input e alvo.

00:03:02.000 --> 00:03:05.300
Então,
se para cada palavra atual

00:03:05.333 --> 00:03:07.600
você tiver
quatro palavras-alvo,

00:03:07.633 --> 00:03:11.033
elas deverão estar
em quatro linhas diferentes no lote.

00:03:11.067 --> 00:03:12.633
Serão 4 pares
de input e alvo.

00:03:12.667 --> 00:03:14.467
Bom, aqui vá em frente

00:03:14.500 --> 00:03:17.433
e tente implementar
esta função get_target.

00:03:17.467 --> 00:03:20.733
E, como sempre,
você pode ver a minha solução

00:03:20.767 --> 00:03:23.600
no bloco de anotações
ou no meu vídeo. Valeu!

